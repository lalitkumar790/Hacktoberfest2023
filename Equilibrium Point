#include <iostream>
#include <vector>

using namespace std;

int equilibriumPoint(vector<int>& A, int n) {
    if (n == 1)
        return 1; // Single element is the equilibrium point

    int totalSum = 0;
    for (int i = 0; i < n; i++)
        totalSum += A[i];

    int leftSum = 0;
    for (int i = 0; i < n; i++) {
        totalSum -= A[i]; // Update the total sum by excluding the current element
        if (leftSum == totalSum)
            return i + 1; // Return the equilibrium point (1-based indexing)
        leftSum += A[i];
    }

    return -1; // No equilibrium point found
}

int main() {
    int n1 = 5;
    vector<int> A1 = {1, 3, 5, 2, 2};
    cout << "Equilibrium point for Example 1: " << equilibriumPoint(A1, n1) << endl;

    int n2 = 1;
    vector<int> A2 = {1};
    cout << "Equilibrium point for Example 2: " << equilibriumPoint(A2, n2) << endl;

    return 0;
}
